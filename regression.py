import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression


def run_regression():
    """
    –õ–∏–Ω–µ–π–Ω–∞—è —Ä–µ–≥—Ä–µ—Å—Å–∏—è —Å –≤–≤–æ–¥–æ–º CSV –∏ –≤—ã–±–æ—Ä–æ–º –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
    """

    csv_path = input("–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ CSV-—Ñ–∞–π–ª—É: ").strip()
    try:
        data = pd.read_csv(csv_path)
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞:", e)
        return None

    print(f"\n–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω! –°—Ç—Ä–æ–∫: {len(data)}, —Å—Ç–æ–ª–±—Ü–æ–≤: {len(data.columns)}")
    print("–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏:", ", ".join(data.columns))

    x_col = input("\n–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø—Ä–∏–∑–Ω–∞–∫–∞ X (–Ω–µ–∑–∞–≤–∏—Å–∏–º–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è): ").strip()
    y_col = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø—Ä–∏–∑–Ω–∞–∫–∞ Y (–∑–∞–≤–∏—Å–∏–º–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è): ").strip()

    if x_col not in data.columns or y_col not in data.columns:
        print("–û—à–∏–±–∫–∞: –∫–æ–ª–æ–Ω–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
        return None

    # --- üîß –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç NaN ---
    subset = data[[x_col, y_col]].dropna()
    if subset.empty:
        print("–û—à–∏–±–∫–∞: –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏ –æ—Ç NaN –¥–∞–Ω–Ω—ã—Ö –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å.")
        return None

    X = subset[[x_col]].values
    y = subset[y_col].values

    # –û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏
    model = LinearRegression()
    model.fit(X, y)

    a, b = model.coef_[0], model.intercept_
    print(f"\n–£—Ä–∞–≤–Ω–µ–Ω–∏–µ: {y_col} = {a:.4f} * {x_col} + {b:.4f}")

    try:
        x_pred = float(input(f"\n–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ {x_col} –¥–ª—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è: "))
    except ValueError:
        print("–û—à–∏–±–∫–∞: –æ–∂–∏–¥–∞–ª–æ—Å—å —á–∏—Å–ª–æ.")
        return None

    y_pred = model.predict([[x_pred]])[0]
    print(f"–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ {y_col}: {y_pred:.3f}")

    plt.figure(figsize=(8, 5))
    plt.scatter(X, y, label="–ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ", alpha=0.7)
    plt.plot(X, model.predict(X), color="red", label="–õ–∏–Ω–∏—è —Ä–µ–≥—Ä–µ—Å—Å–∏–∏")
    plt.scatter(x_pred, y_pred, color="green", s=80, label=f"–ü—Ä–æ–≥–Ω–æ–∑ ({x_col}={x_pred})")
    plt.xlabel(x_col)
    plt.ylabel(y_col)
    plt.title("–ú–µ—Ç–æ–¥ –ª–∏–Ω–µ–π–Ω–æ–π —Ä–µ–≥—Ä–µ—Å—Å–∏–∏")
    plt.legend()
    plt.grid(True)
    plt.show()

    return {"model": model, "x": X, "y": y, "x_pred": x_pred, "y_pred": y_pred}
